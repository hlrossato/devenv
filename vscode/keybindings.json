// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "shift+cmd+backspace",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+'",
        "command": "extension.generateDocstring",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+2",
        "command": "-extension.generateDocstring",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+g",
        "command": "editor.action.goToDeclaration"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.goToDeclaration"
    },
    {
        "key": "ctrl+shift+cmd+s",
        "command": "projectManager.saveProject"
    },
    {
        "key": "alt+cmd+g",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "shift+alt+cmd+t",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "alt+r",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+d",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+t",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "shift+cmd+i",
        "command": "python.sortImports"
    },
    {
        "key": "alt+cmd+o",
        "command": "python.goToPythonObject"
    },
    {
        "key": "shift+alt+r",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+shift+cmd+up",
        "command": "search.action.collapseSearchResults"
    },
    {
        "key": "alt+g alt+c",
        "command": "git.commit"
    },
    {
        "key": "alt+g alt+u",
        "command": "git.unstage"
    },
    {
        "key": "alt+g alt+shift+s",
        "command": "git.stageAll"
    },
    {
        "key": "alt+g alt+shift+u",
        "command": "git.unstageAll"
    },
    {
        "key": "alt+g alt+s",
        "command": "git.stage"
    },
    {
        "key": "alt+g alt+d",
        "command": "git.clean"
    },
    {
        "key": "alt+g alt+shift+d",
        "command": "git.cleanAll"
    },
    {
        "key": "alt+g alt+b",
        "command": "git.branch"
    },
    {
        "key": "alt+g alt+w",
        "command": "git.checkout"
    },
    {
        "key": "alt+g alt+p",
        "command": "git.pushTo"
    },
    {
        "key": "alt+g alt+f",
        "command": "git.fetchAll"
    },
    {
        "key": "alt+g alt+r",
        "command": "git.pullRebase"
    },
    {
        "key": "alt+g alt+l",
        "command": "git.pull"
    },
    {
        "key": "alt+g alt+shift+p",
        "command": "git.pushToForce"
    },
    {
        "key": "alt+g ctrl+alt+s",
        "command": "git.stashPop"
    },
    {
        "key": "alt+g alt+a",
        "command": "git.commitStagedAmend"
    }
]
